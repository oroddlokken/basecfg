# syntax=docker/dockerfile:1.4
ARG PYTHON_VERSION=3.10
FROM python:${PYTHON_VERSION} AS builder

RUN mkdir -p /builder /builder/src
WORKDIR /builder
ENV PYTHONPATH="/builder/src"

# Install uv and create venv with caching
RUN --mount=type=cache,target=/root/.cache/pip pip install uv
RUN --mount=type=cache,target=/root/.cache/uv uv python install ${PYTHON_VERSION}
RUN --mount=type=cache,target=/root/.cache/uv uv python pin ${PYTHON_VERSION}
RUN --mount=type=cache,target=/root/.cache/uv uv venv .venv

COPY requirements.in dev-requirements.in /builder/

RUN --mount=type=cache,target=/root/.cache/uv \
    . .venv/bin/activate && \
    uv pip compile dev-requirements.in -o dev-requirements.txt && \
    uv pip compile requirements.in -o requirements.txt && \
    uv pip install -r dev-requirements.txt -r requirements.txt

COPY setup.py tox.ini pyproject.toml README.md justfile vulture_whitelist.py /builder/

RUN --mount=type=cache,target=/root/.cache/pip . .venv/bin/activate && pip install -e .

COPY src/ /builder/src/
COPY tests/ /builder/tests/
COPY example/ /builder/example/

RUN git init
RUN . .venv/bin/activate && python3 example/example_usage.py
RUN . .venv/bin/activate && just test
RUN --mount=type=cache,target=/root/.cache/pip . .venv/bin/activate && just lint
RUN . .venv/bin/activate && python3 setup.py build

# Final image that extracts coverage reports
FROM python:${PYTHON_VERSION} AS final
COPY --from=builder /builder/.coverage /builder/.coverage